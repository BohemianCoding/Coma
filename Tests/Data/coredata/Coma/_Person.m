// ----------------------------------------
// _Person.m
// Generated by Coma 1.0.
// Do not edit this file - it is automatically generated and your changes will be overwritten.
// ----------------------------------------

#import "_Person.h"
#import "Job.h"

@implementation _Person


#pragma mark - Introspection

/**
 Some static arrays containing lists of properties. These are populated once at +initialize time.
 */

static NSArray* sPersonProperties = nil;
static NSArray* sPersonRelationships = nil;
static NSArray* sPersonAttributes = nil;


/**
 Returns a list of NSStrings with the names of the properties in it.
 @return Array of property names.
 */

+ (NSArray*)propertyNames {
    if (!sPersonProperties) {
        sPersonProperties = @[
                             @"name",
                             @"job",
              ];

        if ([super respondsToSelector:@selector(propertyNames)])
            sPersonProperties = [sPersonProperties arrayByAddingObjectsFromArray:[super performSelector:@selector(propertyNames)]];
    }

    return sPersonProperties;
}


/**
 Returns a list of NSStrings with the names of the relationship properties in it.
 @return Array of relationship names.
 */

+ (NSArray*)relationshipNames {
    if (!sPersonRelationships) {
        sPersonRelationships = @[
                             @"job",
              ];

        if ([super respondsToSelector:@selector(relationshipNames)])
            sPersonRelationships = [sPersonRelationships arrayByAddingObjectsFromArray:[super performSelector:@selector(relationshipNames)]];
    }

    return sPersonProperties;
}


/**
 Returns a list of NSStrings with the names of the attribute properties in it.
 @return Array of attribute names.
 */

+ (NSArray*)attributeNames {
    if (!sPersonAttributes) {
        sPersonAttributes = @[
                             @"name",
              ];

        if ([super respondsToSelector:@selector(attributeNames)])
            sPersonAttributes = [sPersonAttributes arrayByAddingObjectsFromArray:[super performSelector:@selector(attributeNames)]];
    }

    return sPersonProperties;
}


- (id)initWithEntity:(NSEntityDescription *)entity insertIntoManagedObjectContext:(NSManagedObjectContext *)context
{
    self = [super init];
    
    return self;
}

#pragma mark - Attributes







#pragma mark - Relationships

- (void)setJob:(Job *)job
{
    if (_job != job)
    {
        [_job willChangeValueForKey:@"staff"];
        [job willChangeValueForKey:@"staff"];

        if (_job)
        {
            [_job primitiveRemoveStaffObject:self];
        }

        _job = job;

        if (job)
        {
            [job primitiveAddStaffObject:self];
        }

        [_job didChangeValueForKey:@"staff"];
        [job didChangeValueForKey:@"staff"];
    }
}



@end